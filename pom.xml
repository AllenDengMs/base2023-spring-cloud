<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>base2023.backend.cloud</groupId>
  <artifactId>spirng-cloud-project-parent</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <!--
      如果base2023-dependencies install到本地或者deploy到maven仓库后，可以删除掉。
      base2023-dependencies是一个独立的项目，没有继承本项目的pom
      这里标注module是项目开发时告诉Maven，在当前pom文件同级目录下，可以找到base2023-dependencies。
     -->
    <module>base2023-dependencies</module>

    <module>base2023-project-common-parent</module>
    <module>base2023-project-service-parent</module>
  </modules>

  <properties>
    <!-- 下面这5个属性，直接从spring-boot-starter-parent拷贝出来的，去如果缺少了，会导致maven或idea编译出现的错误 -->
    <java.version>17</java.version>
    <resource.delimiter>@</resource.delimiter>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!--
      Spring框架相关版本，怎么选择版本，请看：
      https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E
    -->
    <spring-boot.version>3.0.2</spring-boot.version>
    <spring-cloud.version>2022.0.0</spring-cloud.version>
    <spring-cloud-alibaba.version>2022.0.0.0-RC2</spring-cloud-alibaba.version>

    <org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!--
        引入 springboot-dependencies pom 是为了管理jar包版本管理。
        直接继承parent也是为了 引入 springboot-dependencies pom
      -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!--
        引入 spring-cloud-dependencies来管理版本
        因为会用到spring-cloud-gateway，这些属于spring-cloud生态圈的中间件
      -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- 管理 alibaba 相关jar包版本 -->
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>${spring-cloud-alibaba.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- 本项目用到的三方jar包版本管理，统一写到这个pom.xml里面，方便deploy到maven仓库 -->
      <dependency>
        <groupId>base2023.backend.cloud</groupId>
        <artifactId>base2023-dependencies</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!--
     Spring Boot在下载依赖时,会遵循Maven的仓库搜索顺序:

    1. 首先会在本地仓库(~/.m2/repository)查找依赖是否已下载。
    2. 如果没有找到,则会在pom.xml中定义的<repositories>中查找。
    3. 如果在本地和自定义仓库都找不到,则会从Maven中心仓库(central仓库)下载。
    4. 如果在settings.xml中配置了central仓库的镜像(mirrorOf central),则会从镜像库下载。
    5. 如果依然找不到,则会下载失败。
  -->
  <repositories>
    <repository>
      <id>public</id>
      <name>aliyun nexus</name>
      <url>https://maven.aliyun.com/repository/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>public</id>
      <name>aliyun nexus</name>
      <url>https://maven.aliyun.com/repository/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

</project>
